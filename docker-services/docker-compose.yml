version: '3.7'

volumes:
  kq-console-pgdata:
  kq-autentication-pgdata:
  kq-subscription-pgdata:

services:
  postgres:
    container_name: kq-postgres
    build:
      context: ./console/postgres/
      dockerfile: Dockerfile
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: 123456
      POSTGRES_USER: master
    volumes:
      - kq-console-pgdata:/var/lib/postgresql/data
  postgres-subscription:
    container_name: kq-postgres-subscription
    build:
      context: ./console/postgres/
      dockerfile: Dockerfile
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: master
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: main
    volumes:
      - kq-subscription-pgdata:/var/lib/postgresql/data
    ports:
      - '5432:5432'

  auth-postgres:
    container_name: kq-auth-postgres
    build:
      context: ./authentication/postgres/
      dockerfile: Dockerfile
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: example

    volumes:
      - kq-autentication-pgdata:/var/lib/postgresql/data

  #
  #web
  #  cosnole-wsgi:
  #    shm_size: 1000000000
  #    container_name: kq-console-wsgi
  #    restart: always
  #    build:
  #      context: ../
  #      dockerfile: docker-services/console/python/Dockerfile
  #    tty: true
  #    volumes:
  #      - ../:/home/centos
  #    depends_on:
  #      - postgres
  #    command: python3.8 knocqueue/services/console_web/devserver.py
  #    env_file:
  #      - ../knocqueue/services/console_web/.env
  #    ports:
  #    - 8081
  subscription-ms:
    shm_size: 1000000000
    #container_name: kq-ms-auth-wsgi
    restart: always
    build:
      context: ../
      dockerfile: docker-services/subscription/python/Dockerfile
    tty: true
    volumes:
      - ../:/usr/src/app
    depends_on:
      - postgres
    command: python knocqueue/services/subscription_ms/devserver.py
    environment:
      FLASK_APP: 'knocqueue/services/subscription_ms/src/main:app'
    env_file:
      - ../knocqueue/services/subscription_ms/.env

    deploy:
      mode: replicated
      replicas: 1
    ports:
      - 8083

  auth-wsgi:
    shm_size: 1000000000
    #container_name: kq-ms-auth-wsgi
    restart: always
    build:
      context: ../
      dockerfile: docker-services/authentication/python/Dockerfile
    tty: true
    volumes:
      - ../:/usr/src/app
    depends_on:
      - postgres
    command: python knocqueue/services/authentication_ms/devserver.py
    env_file:
      - ../knocqueue/services/authentication_ms/.env
    deploy:
      mode: replicated
      replicas: 1
    ports:
      - 8082



  nginx:
    container_name: kq-nginx-internal
    build: nginx
    restart: always
    tty: true
    #    links:
    #      - cosnole-wsgi
    depends_on:
      - subscription-ms
      - auth-wsgi

    networks:
      default:
        aliases:
          - console.knocqueue.com #this should be under the public network
          - auth.knocqueue.com
          - subscription.knocqueue.com
    ports:
      - "80:80"

#  nginx-public:
#    container_name: kq-nginx-public
#    build: nginx
#    restart: always
#    tty: true
#    #    links:
#    #      - cosnole-wsgi
#    depends_on:
#      - subscription-ms
#      - auth-wsgi
#
#    networks:
#      default:
#        aliases:
#          - console.knocqueue.com #this should be under the public network
#          - auth.knocqueue.com
#          - subscription.knocqueue.com
#    ports:
#      - "8080:80"

networks:
  public:
    name: kq-public
  default:
    name: kq-private